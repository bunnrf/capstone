q
y
q
h
v
b
c
n
c
x
c
votes.count
c
votes.count
c
votes.count
c
votes.count
c
votes.count
c
votes.count
c
votes.count
c
votes.count
c
votes.count
c
votes.count
c
votes.count
c
votes.count
c
votes.count
c
votes.count
c
votes.count
c
votes.count
c
votes.count
c
votes.count
c
votes.count
votes
c
self.votes
self
n
self
self.votes
c
self.child_comments
c
self
self.child_comments
n
s
self.child_comments
attributes
exit
self.votes
self
c
n
c
exit
self.child_comments
self.save
self.savae
self.child_comments.save
self.child_comments
self.child_comments.build(attributes)
attributes
exit
self.votes
sef.votes
self
c
self.votes
c
attributes.each { |v| v[:votable] = self.object_id }
attributes.each { |v| vote[:votable] = self.object_id }
attributes.each do { |v| vote[:votable] = self.object_id }
self.object_id
self.object_iod
self.id
exit
self
c
self
c
self.rails_votes_attributes=(attributes)
self.rails_votes_attributes=()
rails_votes_attributes=()
rails_votes_attributes=
rails_votes_attributes
attributes
exit
attributes
c
vote
exit
attributes
exit
attributes
c
args[0][0]
args[0][0].store("votable", self)
args[0][0][votable: self]
args[0][0]
args[0][0][votable: self]
args[0][0]
args[0]
args
self
c
exit
rails
args
exit
block
args
exit
args
c
x
n
attributes
exit
self
self[:id]
self.id
attributes
exit
counts
self
c
self
c
self
c
self
c
counts["upvote"] - counts["downvote
counts["upvote"]
counts
